// This is your Prisma schema file for PostgreSQL

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SensorData {
  id                   String  @id @default(uuid())
  latest               String
  elapsed              String
  localName            String
  temperature          Float
  humidity             Float
  pressure             Float
  light_A              Float
  sol                  Float
  acc_x                Float
  acc_y                Float
  acc_z                Float
  iaq                  Float
  gyro_x               Float
  gyro_y               Float
  gyro_z               Float
  accuracy             Int
  SeuilHumidity_min    Float
  SeuilHumidity_max    Float
  SeuilTemp_min        Float
  SeuilTemp_max        Float
  SeuilLum_min         Float
  SeuilLum_max         Float
  SeuilPression_min    Float
  SeuilPression_max    Float
  SeuilCo2_min         Float
  SeuilCo2_max         Float
  MeanTemp             Float
  MeanHumidity         Float
  MeanLum              Float
  MeanPress            Float
  MeanCo2              Float
  S1                   Int
  S2                   Int
  S3                   Int
  S4                   Int
  S5                   Int
  S6                   Int
  S7                   Int
  S8                   Int
  S9                   Int
  S10                  Int
  S11                  Int
  S12                  Int
  S13                  Int
  S14                  Int
  S15                  Int
  S16                  Int
  MomentFloraison      Boolean // Calculated as the average boolean value
  sensorDataForMinteId String?
}

// model SensorDataMinute {
//   id              String   @id @default(uuid())
//   timestamp       DateTime @default(now())
//   startTimestamp  DateTime // Start of the aggregation period
//   endTimestamp    DateTime // End of the aggregation period
//   // Average sensor readings
//   averageTemp     Float?
//   averageHumidity Float?
//   averagePressure Float?
//   averageLightA   Float?
//   averageSol      Float?
//   averageAccX     Float?
//   averageAccY     Float?
//   averageAccZ     Float?
//   averageIaq      Float?
//   averageGyroX    Float?
//   averageGyroY    Float?
//   averageGyroZ    Float?
//   averageAccuracy Float?

//   // Thresholds
//   averageSeuilHumidityMin Float?
//   averageSeuilHumidityMax Float?
//   averageSeuilTempMin     Float?
//   averageSeuilTempMax     Float?
//   averageSeuilLumMin      Float?
//   averageSeuilLumMax      Float?
//   averageSeuilPressionMin Float?
//   averageSeuilPressionMax Float?
//   averageSeuilCo2Min      Float?
//   averageSeuilCo2Max      Float?

//   // Mean values over the period
//   meanTemp     Float?
//   meanHumidity Float?
//   meanLum      Float?
//   meanPress    Float?
//   meanCo2      Float?

//   // Output states as [ActiveCount, InactiveCount]
//   S1  Float[] // [ActiveCount, InactiveCount]
//   S2  Float[]
//   S3  Float[]
//   S4  Float[]
//   S5  Float[]
//   S6  Float[]
//   S7  Float[]
//   S8  Float[]
//   S9  Float[]
//   S10 Float[]
//   S11 Float[]
//   S12 Float[]
//   S13 Float[]
//   S14 Float[]
//   S15 Float[]
//   S16 Float[]

//   originalDataId String? // Reference to SensorData.id for traceability
// }
